// Code generated by "go-option -type=merge"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package proto

// A MergeOption sets options.
type MergeOption interface {
	apply(*merge)
}

// EmptyMergeOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyMergeOption struct{}

func (EmptyMergeOption) apply(*merge) {}

// MergeOptionFunc wraps a function that modifies merge into an
// implementation of the MergeOption interface.
type MergeOptionFunc func(*merge)

func (f MergeOptionFunc) apply(do *merge) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *merge) ApplyOptions(options ...MergeOption) *merge {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// withMerge sets merge.
func withMerge(v merge) MergeOption {
	return MergeOptionFunc(func(o *merge) {
		*o = v
	})
}

// WithMergeUseJsonNames sets UseJsonNames in merge.
// UseJsonNames uses lowerCamelCase name in JSON field names of proto field name instead.
func WithMergeUseJsonNames(v bool) MergeOption {
	return MergeOptionFunc(func(o *merge) {
		o.UseJsonNames = v
	})
}

// WithMergeUseEnumNumbers sets UseEnumNumbers in merge.
// UseEnumNumbers emits enum values as numbers.
func WithMergeUseEnumNumbers(v bool) MergeOption {
	return MergeOptionFunc(func(o *merge) {
		o.UseEnumNumbers = v
	})
}

// WithMergeEmitUnknown sets EmitUnknown in merge.
// EmitUnknown specifies whether to emit unknown fields in the output.
// If specified, the unmarshaler may be unable to parse the output.
// The default is to exclude unknown fields.
func WithMergeEmitUnknown(v bool) MergeOption {
	return MergeOptionFunc(func(o *merge) {
		o.EmitUnknown = v
	})
}
