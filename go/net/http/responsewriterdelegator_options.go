// Code generated by "go-option -type responseWriterDelegator"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package http

// A ResponseWriterDelegatorOption sets options.
type ResponseWriterDelegatorOption interface {
	apply(*responseWriterDelegator)
}

// EmptyResponseWriterDelegatorOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyResponseWriterDelegatorOption struct{}

func (EmptyResponseWriterDelegatorOption) apply(*responseWriterDelegator) {}

// ResponseWriterDelegatorOptionFunc wraps a function that modifies responseWriterDelegator into an
// implementation of the ResponseWriterDelegatorOption interface.
type ResponseWriterDelegatorOptionFunc func(*responseWriterDelegator)

func (f ResponseWriterDelegatorOptionFunc) apply(do *responseWriterDelegator) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *responseWriterDelegator) ApplyOptions(options ...ResponseWriterDelegatorOption) *responseWriterDelegator {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// withResponseWriterDelegator sets responseWriterDelegator.
func withResponseWriterDelegator(v responseWriterDelegator) ResponseWriterDelegatorOption {
	return ResponseWriterDelegatorOptionFunc(func(o *responseWriterDelegator) {
		*o = v
	})
}

// WithResponseWriterDelegatorObserveWriteHeader sets observeWriteHeader in responseWriterDelegator.
func WithResponseWriterDelegatorObserveWriteHeader(v func(code int)) ResponseWriterDelegatorOption {
	return ResponseWriterDelegatorOptionFunc(func(o *responseWriterDelegator) {
		o.observeWriteHeader = v
	})
}
