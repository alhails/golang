// Code generated by "go-option -type=option --trim"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package metric

import (
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/sdk/metric"
)

// A Option sets options.
type Option interface {
	apply(*option)
}

// EmptyOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyOption struct{}

func (EmptyOption) apply(*option) {}

// OptionFunc wraps a function that modifies option into an
// implementation of the Option interface.
type OptionFunc func(*option)

func (f OptionFunc) apply(do *option) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *option) ApplyOptions(options ...Option) *option {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// withOption sets option.
func withOption(v option) Option {
	return OptionFunc(func(o *option) {
		*o = v
	})
}

// WithOptionExporterEndpoints appends ExporterEndpoints in option.
// ExporterEndpoints is the target endpoint URL (scheme, host, port, path) the Exporter will connect to.
func WithOptionExporterEndpoints(v ...string) Option {
	return OptionFunc(func(o *option) {
		o.ExporterEndpoints = append(o.ExporterEndpoints, v...)
	})
}

// WithOptionExporterEndpointsReplace sets ExporterEndpoints in option.
// ExporterEndpoints is the target endpoint URL (scheme, host, port, path) the Exporter will connect to.
func WithOptionExporterEndpointsReplace(v ...string) Option {
	return OptionFunc(func(o *option) {
		o.ExporterEndpoints = v
	})
}

// WithOptionReaders appends Readers in option.
func WithOptionReaders(v ...metric.Reader) Option {
	return OptionFunc(func(o *option) {
		o.Readers = append(o.Readers, v...)
	})
}

// WithOptionReadersReplace sets Readers in option.
func WithOptionReadersReplace(v ...metric.Reader) Option {
	return OptionFunc(func(o *option) {
		o.Readers = v
	})
}

// WithOptionResourceAttrs appends ResourceAttrs in option.
func WithOptionResourceAttrs(v ...attribute.KeyValue) Option {
	return OptionFunc(func(o *option) {
		o.ResourceAttrs = append(o.ResourceAttrs, v...)
	})
}

// WithOptionResourceAttrsReplace sets ResourceAttrs in option.
func WithOptionResourceAttrsReplace(v ...attribute.KeyValue) Option {
	return OptionFunc(func(o *option) {
		o.ResourceAttrs = v
	})
}

// WithOptionMetricOptions appends MetricOptions in option.
func WithOptionMetricOptions(v ...metric.Option) Option {
	return OptionFunc(func(o *option) {
		o.MetricOptions = append(o.MetricOptions, v...)
	})
}

// WithOptionMetricOptionsReplace sets MetricOptions in option.
func WithOptionMetricOptionsReplace(v ...metric.Option) Option {
	return OptionFunc(func(o *option) {
		o.MetricOptions = v
	})
}

// WithOptionMetricPeriodicReaderOptions appends MetricPeriodicReaderOptions in option.
func WithOptionMetricPeriodicReaderOptions(v ...metric.PeriodicReaderOption) Option {
	return OptionFunc(func(o *option) {
		o.MetricPeriodicReaderOptions = append(o.MetricPeriodicReaderOptions, v...)
	})
}

// WithOptionMetricPeriodicReaderOptionsReplace sets MetricPeriodicReaderOptions in option.
func WithOptionMetricPeriodicReaderOptionsReplace(v ...metric.PeriodicReaderOption) Option {
	return OptionFunc(func(o *option) {
		o.MetricPeriodicReaderOptions = v
	})
}
